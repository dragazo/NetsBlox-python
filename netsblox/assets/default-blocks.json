[
    {
        "url": "netsblox://assets/img/blocks/motion/forward.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.forward(10)",
        "docs": "Distances are measured in pixels."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/turn-right.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.turn_right(15)",
        "docs": "Angles are measured in degrees.\n\nThis is equivalent to directly changing the sprite's heading:\n\nself.heading += 15"
    },
    {
        "url": "netsblox://assets/img/blocks/motion/turn-left.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.turn_left(15)",
        "docs": "Angles are measured in degrees.\n\nThis is equivalent to directly changing the sprite's heading:\n\nself.heading -= 15"
    },
    {
        "url": "netsblox://assets/img/blocks/motion/set-heading.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.heading = 90",
        "docs": "Angles are measured in degrees."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/set-pos.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.pos = (0, 0)",
        "docs": "Positions are measured in pixels, where (0, 0) represents the center of the stage."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/change-pos-x.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.x_pos += 10",
        "docs": "Distances are measured in pixels."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/set-pos-x.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.x_pos = 0",
        "docs": "Positions are measured in pixels, where 0 represents the center of the stage."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/change-pos-y.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.y_pos += 10",
        "docs": "Distances are measured in pixels."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/set-pos-y.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.y_pos = 0",
        "docs": "Positions are measured in pixels, where 0 represents the center of the stage."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/edge-bounce.png",
        "category": "motion",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.keep_on_stage(bounce = True)",
        "docs": "The bounce value can be set to False to keep the sprite on the screen without rotating it."
    },
    {
        "url": "netsblox://assets/img/blocks/motion/get-pos-x.png",
        "category": "motion",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.x_pos",
        "docs": "Positions are measured in pixels, where 0 represents the center of the stage.\n\nIf you need both the x and y position, you may use self.pos"
    },
    {
        "url": "netsblox://assets/img/blocks/motion/get-pos-y.png",
        "category": "motion",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.y_pos",
        "docs": "Positions are measured in pixels, where 0 represents the center of the stage.\n\nIf you need both the x and y position, you may use self.pos"
    },
    {
        "url": "netsblox://assets/img/blocks/motion/get-heading.png",
        "category": "motion",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.heading",
        "docs": "Angles are measured in degrees."
    },
    {
        "url": "netsblox://assets/img/blocks/control/onstart.png",
        "category": "control",
        "scale": 1,
        "kind": "hat",
        "globals": "@onstart()\ndef my_onstart(): # functions need unique names\n    pass # replace with your code",
        "stage": "@onstart()\ndef my_onstart(self): # functions need unique names\n    pass # replace with your code",
        "sprite": "@onstart()\ndef my_onstart(self): # functions need unique names\n    pass # replace with your code",
        "docs": "Any function with an @onstart() decorator will run once when the project starts."
    },
    {
        "url": "netsblox://assets/img/blocks/control/onkey.png",
        "category": "control",
        "scale": 1,
        "kind": "hat",
        "globals": "@onkey('space')\ndef my_onkey(): # functions need unique names\n    pass # replace with your code",
        "stage": "@onkey('space')\ndef my_onkey(self): # functions need unique names\n    pass # replace with your code",
        "sprite": "@onkey('space')\ndef my_onkey(self): # functions need unique names\n    pass # replace with your code",
        "docs": "Any function with an @onkey('space') decorator will run once each time the space key is pressed.\n\nYou can change the value in quotes to select a different key. For instance, @onkey('w') would run once each time the W key is pressed."
    },
    {
        "url": "netsblox://assets/img/blocks/control/onmouse.png",
        "category": "control",
        "scale": 1,
        "kind": "hat",
        "globals": "@onmouse('up')\ndef my_onmouse(x, y): # functions need unique names\n    pass # replace with your code",
        "stage": "@onmouse('up')\ndef my_onmouse(self, x, y): # functions need unique names\n    pass # replace with your code",
        "sprite": "@onmouse('up')\ndef my_onmouse(self, x, y): # functions need unique names\n    pass # replace with your code",
        "docs": "Any function with an @onmouse('up') decorator will run once each time you release the left mouse button on top of the sprite/stage."
    },
    {
        "url": "netsblox://assets/img/blocks/control/receive.png",
        "category": "control",
        "scale": 1,
        "kind": "hat",
        "globals": "@nb.on_message('my message')\ndef my_on_message(): # functions need unique names\n    pass # replace with your code",
        "stage": "@nb.on_message('my message')\ndef my_on_message(self): # functions need unique names\n    pass # replace with your code",
        "sprite": "@nb.on_message('my message')\ndef my_on_message(self): # functions need unique names\n    pass # replace with your code",
        "docs": "Any function with a @nb.on_message('my message') will run once each time the message type 'my message' is broadcast.\n\nYou can change the value in quotes to receive a different message type."
    },
    {
        "url": "netsblox://assets/img/blocks/control/broadcast.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "nb.send_message('my message')",
        "stage": "nb.send_message('my message')",
        "sprite": "nb.send_message('my message')",
        "docs": "Broadcasts a message of type 'my message' to any receivers in the project.\n\nYou can change the value in quotes to send a different message type."
    },
    {
        "url": "netsblox://assets/img/blocks/control/no-yield.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "with NoYield():\n    pass # replace with your code",
        "stage": "with NoYield():\n    pass # replace with your code",
        "sprite": "with NoYield():\n    pass # replace with your code",
        "docs": "Any code you put in a NoYield block will run a bit faster by not \"yielding\" (pausing) at many of the normally designated points"
    },
    {
        "url": "netsblox://assets/img/blocks/control/sleep.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "time.sleep(1)",
        "stage": "time.sleep(1)",
        "sprite": "time.sleep(1)",
        "docs": "Pauses the current script for 1 second.\n\nYou can replace this number with any value to sleep for a different amount of time."
    },
    {
        "url": "netsblox://assets/img/blocks/control/loop-forever.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "while True:\n    pass # replace with your code",
        "stage": "while True:\n    pass # replace with your code",
        "sprite": "while True:\n    pass # replace with your code",
        "docs": "Repeatedly runs the inside code over and over again forever.\n\nIn Python, the while loop repeats over and over while the condition is True. Thus, by making the condition explicitly always True, we have an infinite loop."
    },
    {
        "url": "netsblox://assets/img/blocks/control/loop-repeat.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "for _ in range(10):\n    pass # replace with your code",
        "stage": "for _ in range(10):\n    pass # replace with your code",
        "sprite": "for _ in range(10):\n    pass # replace with your code",
        "docs": "Repeatedly runs the inside code a certain number of times."
    },
    {
        "url": "netsblox://assets/img/blocks/control/loop-until.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "while not (condition): # replace with your condition\n    pass # replace with your code",
        "stage": "while not (condition): # replace with your condition\n    pass # replace with your code",
        "sprite": "while not (condition): # replace with your condition\n    pass # replace with your code",
        "docs": "Repeatedly runs the inside code over and over until the condition becomes True.\n\nIf you want to repeat code until the condition becomes False, you can remove the \"not\"."
    },
    {
        "url": "netsblox://assets/img/blocks/control/loop-for.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "for i in range(1, 11):\n    pass # replace with your code",
        "stage": "for i in range(1, 11):\n    pass # replace with your code",
        "sprite": "for i in range(1, 11):\n    pass # replace with your code",
        "docs": "Repeatedly runs the inside code once for each value between 1 and 10.\n\nIn Python, the range function starts at the first number and goes up to but not including the second number. This is why 11 is used here instead of 10."
    },
    {
        "url": "netsblox://assets/img/blocks/control/if.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "if condition: # replace with your condition\n    pass # replace with your code",
        "stage": "if condition: # replace with your condition\n    pass # replace with your code",
        "sprite": "if condition: # replace with your condition\n    pass # replace with your code",
        "docs": "Runs the inside code if the condition is True."
    },
    {
        "url": "netsblox://assets/img/blocks/control/if-else.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "if condition: # replace with your condition\n    pass # replace with your code\nelse:\n    pass # replace with your code",
        "stage": "if condition: # replace with your condition\n    pass # replace with your code\nelse:\n    pass # replace with your code",
        "sprite": "if condition: # replace with your condition\n    pass # replace with your code\nelse:\n    pass # replace with your code",
        "docs": "Runs the top inside code if the condition is True. Otherwise, runs the bottom inside code."
    },
    {
        "url": "netsblox://assets/img/blocks/control/if-else-expr.png",
        "category": "control",
        "scale": 1,
        "kind": "reporter",
        "globals": "'abc' if condition else 'xyz'",
        "stage": "'abc' if condition else 'xyz'",
        "sprite": "'abc' if condition else 'xyz'",
        "docs": "This expression evaluates to the first value ('abc') if the condition is True. Otherwise, it evaluates to the second value ('xyz')\n\nOften, it is easier to read and write code that uses normal if-else statements than using this single-line solution."
    },
    {
        "url": "netsblox://assets/img/blocks/control/return.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "return 10",
        "stage": "return 10",
        "sprite": "return 10",
        "docs": "Inside a custom block (function), report (return) the value 10.\n\nYou can change this number to return a different value, which does not need to be a number (i.e., you could return a string, list, dictionary, etc.)."
    },
    {
        "url": "netsblox://assets/img/blocks/control/try.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "try:\n    pass # replace with your code\nexcept Exception as err:\n    pass # replace with your code",
        "stage": "try:\n    pass # replace with your code\nexcept Exception as err:\n    pass # replace with your code",
        "sprite": "try:\n    pass # replace with your code\nexcept Exception as err:\n    pass # replace with your code",
        "docs": "Attempts to run the top inside code, but if there are any errors, the bottom inside code is executed instead of crashing (as would ordinarily happen without try/except)."
    },
    {
        "url": "netsblox://assets/img/blocks/control/throw.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "raise RuntimeError('uhoh!')",
        "stage": "raise RuntimeError('uhoh!')",
        "sprite": "raise RuntimeError('uhoh!')",
        "docs": "Explicitly generates an error with the provided error message. This is intended to be \"caught\" by a try/catch block."
    },
    {
        "url": "netsblox://assets/img/blocks/control/onstart-clone.png",
        "category": "control",
        "scale": 1,
        "kind": "hat",
        "globals": "",
        "stage": "",
        "sprite": "@onstart('clone')\ndef my_onstart_clone(self): # functions need unique names\n    pass # replace with your code",
        "docs": "Any function with an @onstart('clone') decorator will run once on each fresh clone of this sprite.\n\nNotably, this will not run for the original sprite, for which you need a plain @onstart() decorator."
    },
    {
        "url": "netsblox://assets/img/blocks/control/clone-stmt.png",
        "category": "control",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.clone()",
        "docs": "Creates a new, fresh clone of the current sprite."
    },
    {
        "url": "netsblox://assets/img/blocks/control/clone-expr.png",
        "category": "control",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.clone()",
        "docs": "Creates a new, fresh clone of the current sprite and returns a reference to the created clone."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/set-costume.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "self.costume = costume # replace with your costume",
        "sprite": "self.costume = costume # replace with your costume",
        "docs": "Changes the current sprite costume.\n\nThe assigned value can either be an image or the name/index of an image previously registered as a costume."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/get-costume-num.png",
        "category": "looks",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "self.costumes.index(self.costume, -1)",
        "sprite": "self.costumes.index(self.costume, -1)",
        "docs": "Gets the current active costume number (starting at zero), or -1 if the sprite is currently not wearing once of its pre-defined costumes."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/say-duration.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.say('Hello!', duration = 2)",
        "docs": "Shows a dialog bubble with the designated message and shows it for 2 seconds before disappearing and resuming your code.\n\nYou can change the value in quotes to say a different message or change the duration number to wait for a different amount of time."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/say.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.say('Hello!')",
        "docs": "Shows a dialog bubble with the designated message. To hide this bubble, you can simple say an empty message like self.say('') or simply self.say()"
    },
    {
        "url": "netsblox://assets/img/blocks/looks/change-scale.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.scale += 0.1 # base scale is 1",
        "docs": "Increases the scale (size) of the sprite by 10%, expressed as a ratio (10% = 0.1)."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/set-scale.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.scale = 1 # base scale is 1",
        "docs": "Sets the scale (size) of the sprite to the default value of 100%, expressed as a ratio (100% = 1.0)."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/get-scale.png",
        "category": "looks",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.scale",
        "docs": "Gets the current scale (size) of the sprite, expressed as a ratio (100% = 1.0)."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/set-visible-true.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.visible = True",
        "docs": "Makes the current sprite visible."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/set-visible-false.png",
        "category": "looks",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.visible = False",
        "docs": "Makes the current sprite invisible."
    },
    {
        "url": "netsblox://assets/img/blocks/looks/get-visible.png",
        "category": "looks",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.visible",
        "docs": "Checks if the current sprite is visible (True) or invisible (False)."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-touching.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.is_touching(other_sprite) # replace with your other sprite",
        "docs": "Checks if the current sprite is touching another sprite, returning either True or False."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/ask.png",
        "category": "sensing",
        "scale": 1,
        "kind": "command",
        "globals": "answer = input(\"what's your name?\")",
        "stage": "answer = input(\"what's your name?\")",
        "sprite": "answer = input(\"what's your name?\")",
        "docs": "Asks the user a question, waits for their response, and saves the response in a variable called answer."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/answer.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "answer",
        "stage": "answer",
        "sprite": "answer",
        "docs": "Gets the answer to the last question asked to the user.\n\nNote that this requires a previous ask block (input) in your script in order to work."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-mouse-x.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.mouse_pos[0]",
        "sprite": "stage.mouse_pos[0]",
        "docs": "Gets the current x coordinate of the mouse pointer.\n\nThe mouse position is retrieved as a pair [x, y], so we grab index 0 to have only the x coordinate."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-mouse-y.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.mouse_pos[1]",
        "sprite": "stage.mouse_pos[1]",
        "docs": "Gets the current y coordinate of the mouse pointer.\n\nThe mouse position is retrieved as a pair [x, y], so we grab index 1 to have only the y coordinate."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-key-down.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.is_key_down('space')",
        "sprite": "stage.is_key_down('space')",
        "docs": "Checks if the space key is currently held down, returning either True or False.\n\nYou can change the value in quotes to check a different key. For instance, stage.is_key_down('w') would check if the W key is currently held down."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/timer-reset.png",
        "category": "sensing",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "stage.timer = 0",
        "sprite": "stage.timer = 0",
        "docs": "The timer can be set to any starting point. The reset timer block in NetsBlox is equivalent to setting the timer to zero."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/timer-get.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.timer",
        "sprite": "stage.timer",
        "docs": "Gets the current value of the timer, which measures time in seconds.\n\nYou can assign a value to this variable to \"reset\" the timer to a different value."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-latitude.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.gps_location[0]",
        "sprite": "stage.gps_location[0]",
        "docs": "Gets the current approximated latitude of the current computer.\n\nThe gps location is retrieved as a pair [latitude, longitude], so we grab index 0 to have only the latitude."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-longitude.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.gps_location[1]",
        "sprite": "stage.gps_location[1]",
        "docs": "Gets the current approximated longitude of the current computer.\n\nThe gps location is retrieved as a pair [latitude, longitude], so we grab index 0 to have only the longitude."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-stage-width.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.width",
        "sprite": "stage.width",
        "docs": "Gets the width of the stage in pixels.\n\nNote that making the window bigger does not change the value that is reported."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-stage-height.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.height",
        "sprite": "stage.height",
        "docs": "Gets the height of the stage in pixels.\n\nNote that making the window bigger does not change the value that is reported."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-image-stage.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.get_image()",
        "sprite": "stage.get_image()",
        "docs": "Takes a screenshot of the current stage and all sprites, which is returned as an image.\n\nYou could then, for instance, use this as a costume or send it to any NetsBlox RPC that accepts images."
    },
    {
        "url": "netsblox://assets/img/blocks/sensing/get-image-self.png",
        "category": "sensing",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "self.get_image()",
        "sprite": "self.get_image()",
        "docs": "Takes a screenshot of the current sprite, which is returned as an image.\n\nYou could then, for instance, use this as a costume or send it to any NetsBlox RPC that accepts images."
    },
    {
        "url": "netsblox://assets/img/blocks/sound/play-sound.png",
        "category": "sound",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "self.play_sound(my_sound)",
        "sprite": "self.play_sound(my_sound)"
    },
    {
        "url": "netsblox://assets/img/blocks/sound/play-sound-wait.png",
        "category": "sound",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "self.play_sound(my_sound, wait = True)",
        "sprite": "self.play_sound(my_sound, wait = True)"
    },
    {
        "url": "netsblox://assets/img/blocks/sound/stop-sounds.png",
        "category": "sound",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "stage.stop_sounds()",
        "sprite": "stage.stop_sounds()"
    },
    {
        "url": "netsblox://assets/img/blocks/sound/sound-duration.png",
        "category": "sound",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "my_sound.duration",
        "sprite": "my_sound.duration"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/add.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 + 3",
        "stage": "7 + 3",
        "sprite": "7 + 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/sub.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 - 3",
        "stage": "7 - 3",
        "sprite": "7 - 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/mul.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 * 3",
        "stage": "7 * 3",
        "sprite": "7 * 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/div.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 / 3",
        "stage": "7 / 3",
        "sprite": "7 / 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/pow.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 ** 3",
        "stage": "7 ** 3",
        "sprite": "7 ** 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/mod.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 % 3",
        "stage": "7 % 3",
        "sprite": "7 % 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/round.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "round(3.14)",
        "stage": "round(3.14)",
        "sprite": "round(3.14)"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/sqrt.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "math.sqrt(10)",
        "stage": "math.sqrt(10)",
        "sprite": "math.sqrt(10)"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/randrange.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "random.randrange(1, 11)",
        "stage": "random.randrange(1, 11)",
        "sprite": "random.randrange(1, 11)"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/less.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 < 3",
        "stage": "7 < 3",
        "sprite": "7 < 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/less-eq.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 <= 3",
        "stage": "7 <= 3",
        "sprite": "7 <= 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/eq.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 == 3",
        "stage": "7 == 3",
        "sprite": "7 == 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/neq.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 != 3",
        "stage": "7 != 3",
        "sprite": "7 != 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/great-eq.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 >= 3",
        "stage": "7 >= 3",
        "sprite": "7 >= 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/great.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "7 > 3",
        "stage": "7 > 3",
        "sprite": "7 > 3"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/and.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "a and b",
        "stage": "a and b",
        "sprite": "a and b"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/or.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "a or b",
        "stage": "a or b",
        "sprite": "a or b"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/not.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "not x",
        "stage": "not x",
        "sprite": "not x"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/true.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "True",
        "stage": "True",
        "sprite": "True"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/false.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "False",
        "stage": "False",
        "sprite": "False"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/join.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "''.join(['hello ', 'world'])",
        "stage": "''.join(['hello ', 'world'])",
        "sprite": "''.join(['hello ', 'world'])"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/split-space.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "'hello world'.split(' ')",
        "stage": "'hello world'.split(' ')",
        "sprite": "'hello world'.split(' ')"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-index-first.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "'world'[0]",
        "stage": "'world'[0]",
        "sprite": "'world'[0]"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-index-last.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "'world'[-1]",
        "stage": "'world'[-1]",
        "sprite": "'world'[-1]"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-index-rand.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "random.choice('world')",
        "stage": "random.choice('world')",
        "sprite": "random.choice('world')"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-len.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "len('world')",
        "stage": "len('world')",
        "sprite": "len('world')"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-ord.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "ord('a')",
        "stage": "ord('a')",
        "sprite": "ord('a')"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/str-chr.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "chr(97)",
        "stage": "chr(97)",
        "sprite": "chr(97)"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/isinstance-list.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "isinstance(5, list)",
        "stage": "isinstance(5, list)",
        "sprite": "isinstance(5, list)"
    },
    {
        "url": "netsblox://assets/img/blocks/operators/isinstance-str.png",
        "category": "operators",
        "scale": 1,
        "kind": "reporter",
        "globals": "isinstance(5, str)",
        "stage": "isinstance(5, str)",
        "sprite": "isinstance(5, str)"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/clear.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "stage.clear_drawings()",
        "sprite": "stage.clear_drawings()"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/set-drawing-true.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.drawing = True"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/set-drawing-false.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.drawing = False"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/get-drawing.png",
        "category": "pen",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.drawing"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/set-pen-color.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.pen_color = 'red'"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/get-pen-color.png",
        "category": "pen",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.pen_color"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/get-pen-size.png",
        "category": "pen",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "",
        "sprite": "self.pen_size"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/change-pen-size.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.pen_size += 1"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/set-pen-size.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.pen_size = 1"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/stamp.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.stamp()"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/write.png",
        "category": "pen",
        "scale": 1,
        "kind": "command",
        "globals": "",
        "stage": "",
        "sprite": "self.write('Hello!', size = 12)"
    },
    {
        "url": "netsblox://assets/img/blocks/pen/get-drawings.png",
        "category": "pen",
        "scale": 1,
        "kind": "reporter",
        "globals": "",
        "stage": "stage.get_drawings()",
        "sprite": "stage.get_drawings()"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/var-local.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "a = 0",
        "stage": "a = 0",
        "sprite": "a = 0"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "['hello', 'world']",
        "stage": "['hello', 'world']",
        "sprite": "['hello', 'world']"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-range.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "[*range(1, 11)]",
        "stage": "[*range(1, 11)]",
        "sprite": "[*range(1, 11)]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-cons.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "[123, *my_list]",
        "stage": "[123, *my_list]",
        "sprite": "[123, *my_list]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-index-first.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "my_list[0]",
        "stage": "my_list[0]",
        "sprite": "my_list[0]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-index-last.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "my_list[-1]",
        "stage": "my_list[-1]",
        "sprite": "my_list[-1]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-index-rand.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "random.choice(my_list)",
        "stage": "random.choice(my_list)",
        "sprite": "random.choice(my_list)"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-cdr.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "my_list[1:]",
        "stage": "my_list[1:]",
        "sprite": "my_list[1:]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-len.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "len(my_list)",
        "stage": "len(my_list)",
        "sprite": "len(my_list)"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-rev.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "my_list[::-1]",
        "stage": "my_list[::-1]",
        "sprite": "my_list[::-1]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-in.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "'thing' in my_list",
        "stage": "'thing' in my_list",
        "sprite": "'thing' in my_list"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-empty.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "len(my_list) == 0",
        "stage": "len(my_list) == 0",
        "sprite": "len(my_list) == 0"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-map.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "[2 * x for x in my_list]",
        "stage": "[2 * x for x in my_list]",
        "sprite": "[2 * x for x in my_list]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-filter.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "[x for x in my_list if x > 0]",
        "stage": "[x for x in my_list if x > 0]",
        "sprite": "[x for x in my_list if x > 0]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/loop-foreach.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "for item in my_list: # replace with your list\n    pass # replace with your code",
        "stage": "for item in my_list: # replace with your list\n    pass # replace with your code",
        "sprite": "for item in my_list: # replace with your list\n    pass # replace with your code"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-push.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list.append('thing')",
        "stage": "my_list.append('thing')",
        "sprite": "my_list.append('thing')"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-remove-first.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "del my_list[0]",
        "stage": "del my_list[0]",
        "sprite": "del my_list[0]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-remove-last.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "del my_list[-1]",
        "stage": "del my_list[-1]",
        "sprite": "del my_list[-1]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-remove-all.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list.clear()",
        "stage": "my_list.clear()",
        "sprite": "my_list.clear()"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-insert-first.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list.insert(0, 'thing')",
        "stage": "my_list.insert(0, 'thing')",
        "sprite": "my_list.insert(0, 'thing')"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-insert-last.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list.append('thing')",
        "stage": "my_list.append('thing')",
        "sprite": "my_list.append('thing')"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-replace-first.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list[0] = 'thing'",
        "stage": "my_list[0] = 'thing'",
        "sprite": "my_list[0] = 'thing'"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-replace-last.png",
        "category": "variables",
        "scale": 1,
        "kind": "command",
        "globals": "my_list[-1] = 'thing'",
        "stage": "my_list[-1] = 'thing'",
        "sprite": "my_list[-1] = 'thing'"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-cat.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "[*list_1, *list_2]",
        "stage": "[*list_1, *list_2]",
        "sprite": "[*list_1, *list_2]"
    },
    {
        "url": "netsblox://assets/img/blocks/variables/list-sort.png",
        "category": "variables",
        "scale": 1,
        "kind": "reporter",
        "globals": "sorted(my_list)",
        "stage": "sorted(my_list)",
        "sprite": "sorted(my_list)"
    },
    {
        "url": "netsblox://assets/img/blocks/network/receive.png",
        "category": "network",
        "scale": 1,
        "kind": "hat",
        "globals": "@nb.on_message('message') # replace with your message type\ndef my_on_message(msg): # replace with your message fields + functions need unique names\n    pass # replace with your code",
        "stage": "@nb.on_message('message') # replace with your message type\ndef my_on_message(self, msg): # replace with your message fields + functions need unique names\n    pass # replace with your code",
        "sprite": "@nb.on_message('message') # replace with your message type\ndef my_on_message(self, msg): # replace with your message fields + functions need unique names\n    pass # replace with your code"
    },
    {
        "url": "netsblox://assets/img/blocks/network/send.png",
        "category": "network",
        "scale": 1,
        "kind": "command",
        "globals": "nb.send_message('message', target, msg = 'Hello!') # replace with your message type, target, and message fields",
        "stage": "nb.send_message('message', target, msg = 'Hello!') # replace with your message type, target, and message fields",
        "sprite": "nb.send_message('message', target, msg = 'Hello!') # replace with your message type, target, and message fields"
    },
    {
        "url": "netsblox://assets/img/blocks/network/rpc-call.png",
        "category": "network",
        "scale": 1,
        "kind": "reporter",
        "globals": "nb.air_quality.quality_index(34, -87)",
        "stage": "nb.air_quality.quality_index(34, -87)",
        "sprite": "nb.air_quality.quality_index(34, -87)"
    },
    {
        "url": "netsblox://assets/img/blocks/network/rpc-run.png",
        "category": "network",
        "scale": 1,
        "kind": "command",
        "globals": "nb.air_quality.quality_index(34, -87)",
        "stage": "nb.air_quality.quality_index(34, -87)",
        "sprite": "nb.air_quality.quality_index(34, -87)"
    }
]
